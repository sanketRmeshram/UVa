#include <bits/stdc++.h>
using namespace std;
 
#define ff first
#define ss second
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
#define boost ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define check(x) cout << #x << " : " << (x) << endl
#define inf LLONG_MAX
#define all(v) v.begin(),v.end() 
#define allr(v) v.rbegin(),v.rend() 
//#define endl '\n'  
//#define mod 10000007
typedef  long long ll; 
typedef  unsigned long long ull; 
typedef vector<ll> edge;
typedef pair< ll , ll > mypair;
typedef priority_queue <ll> max_heap;
typedef priority_queue <ll, vector<ll>, greater<ll> > min_heap;
const ll N=200000;
vector<ll> v[N+1];

ll totient(ll n)
{
	ll ans=n;
	for(auto i:v[n]) ans-=ans/i;
	return ans;
}
void seive(ll n)
{
	std::vector<bool > is_prime(n+1,1);
	for(ll i=2;i<=n;i++)
	{
		if(is_prime[i])
		{
			for(ll j=i;j<=n;j+=i)
			{
				v[j].pb(i);
				is_prime[j]=0;
			}
		}
	}
}

int main()
{
	boost;
	seive(N);
	ll tot[N+1];
	tot[1]=1;
	for(ll i=2;i<=N;i++) tot[i]=totient(i);
	ll k;
	while(cin>>k)
	{
		if(k==0) return 0;
		if(k==1)
		{
			cout<<"0/1"<<endl;
			continue;
		}
		ll sum=0;
		k--;
		ll i=1;
		while(sum<k) sum+=tot[i],i++;
		i--;
		ll index=k-(sum-tot[i]);
		ll n=i;
		for(i=1;i<=n && index;i++)
		{
			if(__gcd(i,n) == 1) index--;
		}
		i--;
		cout<<i<<"/"<<n<<endl;

	}	
	return 0;

}
